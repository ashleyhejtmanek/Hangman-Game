#BlueJ class context
comment0.params=entries
comment0.target=HangmanGame(java.util.ArrayList)
comment1.params=
comment1.target=int\ getGuessLeft()
comment1.text=\r\n\ Method\ getGuessLeft\ this\ method\ returns\ how\ many\ incorrect\ guesses\ the\ user\ has\ left\r\n\r\n\ @return\ The\ return\ value\ is\ the\ value\ of\ how\ many\ incorrect\ guesses\ the\ user\ has\ left\r\n
comment10.params=
comment10.target=java.lang.String\ currentGuessString()
comment10.text=\r\n\ Method\ currentGuessString\ shows\ the\ word\ as\ a\ mix\ of\ letters\ and\ \#\ after\ each\ guess\r\n\r\n\ @return\ The\ return\ value\ is\ the\ string\ of\ the\ word\ after\ each\ guess\r\n
comment11.params=
comment11.target=void\ gamePlay()
comment11.text=\r\n\ Method\ gamePlay\ is\ the\ actual\ mechanics\ of\ the\ hangman\ game\r\n\r\n
comment2.params=
comment2.target=java.lang.String\ getWord()
comment2.text=\r\n\ Method\ getWord\ gives\ the\ word\ that\ the\ user\ must\ guess\r\n\r\n\ @return\ The\ return\ value\ is\ the\ word\ that\ the\ user\ has\ to\ guess\ as\ it\ is\ hidden\r\n
comment3.params=
comment3.target=boolean\ getCheckNewGuess()
comment3.text=\r\n\ Method\ getCheckNewGuess\ gives\ the\ value\ of\ the\ boolean\ checkNewGuess\r\n\r\n\ @return\ \ \ \ \ The\ value\ of\ the\ boolean\ checkNewGuess\ which\ is\ used\ later\ in\ the\ gamePlay\ method\r\n
comment4.params=
comment4.target=void\ playGame()
comment4.text=\r\n\ Method\ playGame\ makes\ it\ so\ the\ game\ can\ be\ played\ by\ the\ user\r\n\r\n
comment5.params=
comment5.target=java.util.ArrayList\ loadWords()
comment5.text=\r\n\ Method\ loadWords\ uploads\ the\ words\ from\ the\ file\r\n\r\n\ @return\ The\ return\ value\ is\ the\ list\ of\ words\ used\ by\ the\ game\r\n
comment6.params=
comment6.target=void\ setupGame()
comment6.text=\r\n\ Method\ setupGame\ clears\ all\ the\ previous\ guesses,\ sets\ up\ the\ new\ game,\ and\ loads\ the\ new\ word\r\n\r\n
comment7.params=
comment7.target=char\ getGuess()
comment7.text=\r\n\ Method\ getGuess\ this\ takes\ the\ user's\ guess,\ checks\ if\ it\ is\ valid,\ and\ starts\ the\ next\ turn\r\n\r\n\ @return\ The\ return\ value\ is\ the\ lower\ case\ version\ of\ the\ user's\ guess\r\n
comment8.params=guessInput
comment8.target=boolean\ isValid(java.lang.String)
comment8.text=\r\n\ Method\ isValid\ this\ method\ checks\ to\ see\ if\ the\ guess\ is\ valid\r\n\r\n\ @param\ guessInput\ A\ parameter\ that\ is\ a\ string\ just\ in\ case\ the\ user\ puts\ in\ more\ than\ one\ character\r\n\ @return\ The\ return\ value\ is\ a\ true\ or\ false\r\n
comment9.params=letter
comment9.target=boolean\ checkGuess(char)
comment9.text=\r\n\ Method\ checkGuess\ checks\ if\ character\ given\ by\ user\ is\ in\ the\ word\r\n\ \r\n\ @param\ The\ character\ input\ by\ the\ user\r\n\ @return\ The\ return\ value\ is\ a\ boolean,\ true\ or\ false,\ of\ whether\ or\ not\ the\ character\ is\ in\ the\ word\r\n
numComments=12
